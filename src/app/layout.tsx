import type { Metadata } from "next";

import { Toaster } from "@/components/ui/sonner"

import { JotaiProvider } from "@/contexts/jotai-contexts";
import { getCourses} from "@/actions/courses/getCourses";
import { getNCs } from "@/actions/ncs/getNCs";
import { getUnits } from "@/actions/units/getUnits";
import { getLearningObjectives } from "@/actions/learning_objectives/getLearningObjectives";

import { inter, merriweather, geistSans, geistMono } from '@/fonts';
import "./globals.css";
import { getLessons } from "@/actions/lessons/getLessons";
import { getCriteria } from "@/actions/criteria/getCriteria";
import { getLOLessonsMaps } from "@/actions/learning-objectives-lessons-map/getLOLessonsMap";

import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from "@clerk/nextjs";

import { auth, currentUser } from "@clerk/nextjs/server";

import {getProfile} from "@/actions/profiles/getProfile";
import Link from "next/link";
import { createNewProfile } from "@/actions/profiles/createNewProfile";
import { getAssignments } from "@/actions/assignments/getAssignments";
import { getGroups } from "@/actions/groups/getGroups";
import { getActivities } from "@/actions/activities/getActivities";
import MobileConsole from "@/components/mobile-console";

export const metadata: Metadata = {
  title: "Course Planner",
  description: "Generated by mr-salih.org",
};

const RootLayout = async ({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) => {


    const {data: courses, error: coursesError} = await getCourses();
    const {data: NCs, error: NCsError} = await getNCs();
    const {data: units, error: unitsError} = await getUnits();
    const {data: los, error: loError} = await getLearningObjectives();
    const {data: lessons, error: lessonsError} = await getLessons();
    const {data: criteria, error: criteriaError} = await getCriteria();
    const {data: loLesonsMaps, error: loLessonsMapError} = await getLOLessonsMaps();
    const {data: assignments, error: assignmentsError} = await getAssignments();
    const {data: groups, error: groupsError} = await getGroups();
    const {data: activities, error: activitiesError} = await getActivities();


    //console.log("Assignments", assignments, assignmentsError);

    const {userId} = await auth();
    let profile = userId ? await getProfile(userId) : null;

    
    // first time user signs in
    if (userId !== null && profile?.data === null){
      const cUser = await currentUser();
      console.info("Profile not found for user ID: ", userId);
      let profile = await createNewProfile(userId, cUser?.firstName || "Not Set", cUser?.lastName || "Not Set");


    }

    
    
  return (
    <html lang="en" className="">
      <body
        className={`

          font-sans bg-background text-foreground
          ${geistSans.variable} ${geistMono.variable} ${inter.variable} ${merriweather.variable} antialiased `}
      >
 <ClerkProvider>
    <JotaiProvider 
      initialCourses={courses} 
      initialNCs={NCs} 
      initialUnits={units} 
      initialLOs={los}
      initialLessons={lessons}
      initialActivities={activities}
      initialCriteria={criteria}
      initialLOLessonMaps={loLesonsMaps}
      initialAssignments={assignments}
      initialGroups={groups}
      > 
        <MobileConsole/>
        <div className="flex flex-col h-screen overflow-hidden">
          <div className="p-4 flex flex-row items-center  fixed top-0 left-0 right-0 z-50 bg-slate-100">
            <div>Planner</div>
            
              <SignedOut>
                <SignInButton />
                <SignUpButton />
              </SignedOut>
              
              <div className="flex gap-2 grow ">
                <SignedIn>
                {profile && profile.data?.is_teacher && (<div className="ml-4 text-sm hover:underline hover:text-blue-400">
                  <Link href="/plans">Course Plans</Link>
                  </div>)}

                {profile && (<div className="ml-4 text-sm hover:underline hover:text-blue-400">
                  <Link href="/profile">Profile</Link>
                </div>)}

                </SignedIn>
              </div>

              
              <SignedIn>
                <UserButton />
              </SignedIn>

            
          </div>

          {/* Spacer for fixed header height */}
          <div className="h-12"></div>

          <div className="flex-1 overflow-y-auto">
            
              {children}
            
            
          </div>
        
        </div>
    </JotaiProvider>
       </ClerkProvider>
        <Toaster richColors />
      </body>
    </html>
  );
}

export default RootLayout;
